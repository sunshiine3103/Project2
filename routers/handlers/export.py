from aiogram import Router
from aiogram.types import Message, BufferedInputFile
from aiogram.filters import Command
from datetime import datetime

from services.database import Database

router = Router()

@router.message(Command("export"))
async def export_tasks(message: Message):
    """–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–¥–∞—á –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª"""
    db = Database()
    tasks = db.get_user_tasks(message.from_user.id)
    
    if not tasks:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–∞—á –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")
        return
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    export_text = "üìã –í–∞—à–∏ –∑–∞–¥–∞—á–∏:\n\n"
    for task in tasks:
        status = "‚úÖ" if task['is_completed'] else "‚è≥"
        export_text += (
            f"{status} {task['title']} "
            f"(–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {task['category']})\n"
            f"–î–µ–¥–ª–∞–π–Ω: {task['deadline'] or '–Ω–µ—Ç'}\n\n"
        )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    filename = f"tasks_export_{datetime.now().strftime('%Y%m%d_%H%M')}.txt"
    file = BufferedInputFile(
        export_text.encode('utf-8'),
        filename=filename
    )
    
    await message.answer_document(
        file,
        caption="–í–∞—à–∏ –∑–∞–¥–∞—á–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã"
    )
